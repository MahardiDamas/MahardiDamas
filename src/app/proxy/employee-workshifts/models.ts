import type { RequestType } from '../shared/request-type.enum';
import type { ApprovalStatus } from '../shared/approval-status.enum';
import type { FullAuditedEntityDto, PagedAndSortedResultRequestDto } from '../shared';
import type { CompanyDto } from '../companies/models';
import type { EmployeeDto } from '../employees/models';
import type { WorkshiftDto } from '../workshifts/models';

export interface EmployeeWorkshiftCreateDto {
  number?: string;
  date?: string;
  dateClientLocal?: string;
  timeZoneInfo?: string;
  timeZoneOffset?: number;
  wsWorkTimeIn?: string;
  wsClockInStart?: string;
  wsClockInEnd?: string;
  wsClockInLatitude?: string;
  wsClockInLongitude?: string;
  wsClockInRadius?: number;
  wsWorkTimeOut?: string;
  wsClockOutStart?: string;
  wsClockOutEnd?: string;
  wsClockOutLatitude?: string;
  wsClockOutLongitude?: string;
  wsClockOutRadius?: number;
  wsBreakTimeStart1?: string;
  wsBreakTimeEnd1?: string;
  wsBreakTimeStart2?: string;
  wsBreakTimeEnd2?: string;
  wsOvertimeStart?: string;
  wsOvertimeEnd?: string;
  wsTotalBreakTime1?: number;
  wsTotalBreakTime2?: number;
  wsTotalWorkingHours?: number;
  wsTotalOvertime?: number;
  wsIsWeekdays?: boolean;
  wsIsWeekend?: boolean;
  wsIsFriday?: boolean;
  wsIsSaturday?: boolean;
  wsIsSunday?: boolean;
  wsIsHoliday?: boolean;
  wsIsLeave?: boolean;
  wsLeaveNumber?: string;
  wsLeaveDetailId?: string;
  clockIn?: string;
  clockInTimeZoneInfo?: string;
  clockInTimeZoneOffset?: number;
  clockInPhoto?: string;
  clockInTemperature?: number;
  clockInDeviceId?: string;
  clockInIsMobileDevice?: boolean;
  clockInIsThirdPartyDevice?: boolean;
  clockInLocation?: string;
  clockInLatitude?: string;
  clockInLongitude?: string;
  clockOut?: string;
  clockOutTimeZoneInfo?: string;
  clockOutTimeZoneOffset?: number;
  clockOutPhoto?: string;
  clockOutTemperature?: number;
  clockOutDeviceId?: string;
  clockOutIsMobileDevice?: boolean;
  clockOutIsThirdPartyDevice?: boolean;
  clockOutLocation?: string;
  clockOutLatitude?: string;
  clockOutLongitude?: string;
  requestType?: RequestType;
  requestDate?: string;
  requestNumber?: string;
  requestReason?: string;
  requestIsReject?: boolean;
  requestRejectReason?: string;
  approved1DateTime?: string;
  approved1Status?: ApprovalStatus;
  approved2DateTime?: string;
  approved2Status?: ApprovalStatus;
  approved3DateTime?: string;
  approved3Status?: ApprovalStatus;
  approvedStatus?: ApprovalStatus;
  approved4DateTime?: string;
  approved4Status?: ApprovalStatus;
  approved5DateTime?: string;
  approved5Status?: ApprovalStatus;
  approvedStatusHrd?: ApprovalStatus;
  clockInRadius?: number;
  clockOutRadius?: string;
  isAbsence?: boolean;
  absenceReason?: string;
  isLate?: boolean;
  lateLong?: string;
  lateReason?: string;
  isHomeEarly?: boolean;
  homeEarlyReason?: string;
  isOutOffice?: boolean;
  outOfficeReason?: string;
  isLateNight?: boolean;
  lateNightReason?: string;
  isOvertime?: boolean;
  overtimeReason?: string;
  isAttend?: boolean;
  totalBreakTime1?: number;
  totalBreakTime2?: number;
  totalWorkingHours?: number;
  totalOvertime?: number;
  dateClosed?: string;
  companyId: string;
  employeeId: string;
  approved1ById?: string;
  approved2ById?: string;
  approved3ById?: string;
  approved4ById?: string;
  approved5ById?: string;
  workshiftId?: string;
}

export interface EmployeeWorkshiftDto extends FullAuditedEntityDto {
  number?: string;
  date?: string;
  dateClientLocal?: string;
  timeZoneInfo?: string;
  timeZoneOffset?: number;
  wsWorkTimeIn?: string;
  wsClockInStart?: string;
  wsClockInEnd?: string;
  wsClockInLatitude?: string;
  wsClockInLongitude?: string;
  wsClockInRadius?: number;
  wsWorkTimeOut?: string;
  wsClockOutStart?: string;
  wsClockOutEnd?: string;
  wsClockOutLatitude?: string;
  wsClockOutLongitude?: string;
  wsClockOutRadius?: number;
  wsBreakTimeStart1?: string;
  wsBreakTimeEnd1?: string;
  wsBreakTimeStart2?: string;
  wsBreakTimeEnd2?: string;
  wsOvertimeStart?: string;
  wsOvertimeEnd?: string;
  wsTotalBreakTime1?: number;
  wsTotalBreakTime2?: number;
  wsTotalWorkingHours?: number;
  wsTotalOvertime?: number;
  wsIsWeekdays?: boolean;
  wsIsWeekend?: boolean;
  wsIsFriday?: boolean;
  wsIsSaturday?: boolean;
  wsIsSunday?: boolean;
  wsIsHoliday?: boolean;
  wsIsLeave?: boolean;
  wsLeaveNumber?: string;
  wsLeaveDetailId?: string;
  clockIn?: string;
  clockInTimeZoneInfo?: string;
  clockInTimeZoneOffset?: number;
  clockInPhoto?: string;
  clockInTemperature?: number;
  clockInDeviceId?: string;
  clockInIsMobileDevice?: boolean;
  clockInIsThirdPartyDevice?: boolean;
  clockInLocation?: string;
  clockInLatitude?: string;
  clockInLongitude?: string;
  clockOut?: string;
  clockOutTimeZoneInfo?: string;
  clockOutTimeZoneOffset?: number;
  clockOutPhoto?: string;
  clockOutTemperature?: number;
  clockOutDeviceId?: string;
  clockOutIsMobileDevice?: boolean;
  clockOutIsThirdPartyDevice?: boolean;
  clockOutLocation?: string;
  clockOutLatitude?: string;
  clockOutLongitude?: string;
  requestType?: RequestType;
  requestDate?: string;
  requestNumber?: string;
  requestReason?: string;
  requestIsReject?: boolean;
  requestRejectReason?: string;
  approved1DateTime?: string;
  approved1Status?: ApprovalStatus;
  approved2DateTime?: string;
  approved2Status?: ApprovalStatus;
  approved3DateTime?: string;
  approved3Status?: ApprovalStatus;
  approvedStatus?: ApprovalStatus;
  approved4DateTime?: string;
  approved4Status?: ApprovalStatus;
  approved5DateTime?: string;
  approved5Status?: ApprovalStatus;
  approvedStatusHrd?: ApprovalStatus;
  clockInRadius?: number;
  clockOutRadius?: string;
  isAbsence?: boolean;
  absenceReason?: string;
  isLate?: boolean;
  lateLong?: string;
  lateReason?: string;
  isHomeEarly?: boolean;
  homeEarlyReason?: string;
  isOutOffice?: boolean;
  outOfficeReason?: string;
  isLateNight?: boolean;
  lateNightReason?: string;
  isOvertime?: boolean;
  overtimeReason?: string;
  isAttend?: boolean;
  totalBreakTime1?: number;
  totalBreakTime2?: number;
  totalWorkingHours?: number;
  totalOvertime?: number;
  dateClosed?: string;
  companyId: string;
  employeeId: string;
  approved1ById?: string;
  approved2ById?: string;
  approved3ById?: string;
  approved4ById?: string;
  approved5ById?: string;
  workshiftId?: string;
}

export interface EmployeeWorkshiftUpdateDto {
  number?: string;
  date?: string;
  dateClientLocal?: string;
  timeZoneInfo?: string;
  timeZoneOffset?: number;
  wsWorkTimeIn?: string;
  wsClockInStart?: string;
  wsClockInEnd?: string;
  wsClockInLatitude?: string;
  wsClockInLongitude?: string;
  wsClockInRadius?: number;
  wsWorkTimeOut?: string;
  wsClockOutStart?: string;
  wsClockOutEnd?: string;
  wsClockOutLatitude?: string;
  wsClockOutLongitude?: string;
  wsClockOutRadius?: number;
  wsBreakTimeStart1?: string;
  wsBreakTimeEnd1?: string;
  wsBreakTimeStart2?: string;
  wsBreakTimeEnd2?: string;
  wsOvertimeStart?: string;
  wsOvertimeEnd?: string;
  wsTotalBreakTime1?: number;
  wsTotalBreakTime2?: number;
  wsTotalWorkingHours?: number;
  wsTotalOvertime?: number;
  wsIsWeekdays?: boolean;
  wsIsWeekend?: boolean;
  wsIsFriday?: boolean;
  wsIsSaturday?: boolean;
  wsIsSunday?: boolean;
  wsIsHoliday?: boolean;
  wsIsLeave?: boolean;
  wsLeaveNumber?: string;
  wsLeaveDetailId?: string;
  clockIn?: string;
  clockInTimeZoneInfo?: string;
  clockInTimeZoneOffset?: number;
  clockInPhoto?: string;
  clockInTemperature?: number;
  clockInDeviceId?: string;
  clockInIsMobileDevice?: boolean;
  clockInIsThirdPartyDevice?: boolean;
  clockInLocation?: string;
  clockInLatitude?: string;
  clockInLongitude?: string;
  clockOut?: string;
  clockOutTimeZoneInfo?: string;
  clockOutTimeZoneOffset?: number;
  clockOutPhoto?: string;
  clockOutTemperature?: number;
  clockOutDeviceId?: string;
  clockOutIsMobileDevice?: boolean;
  clockOutIsThirdPartyDevice?: boolean;
  clockOutLocation?: string;
  clockOutLatitude?: string;
  clockOutLongitude?: string;
  requestType?: RequestType;
  requestDate?: string;
  requestNumber?: string;
  requestReason?: string;
  requestIsReject?: boolean;
  requestRejectReason?: string;
  approved1DateTime?: string;
  approved1Status?: ApprovalStatus;
  approved2DateTime?: string;
  approved2Status?: ApprovalStatus;
  approved3DateTime?: string;
  approved3Status?: ApprovalStatus;
  approvedStatus?: ApprovalStatus;
  approved4DateTime?: string;
  approved4Status?: ApprovalStatus;
  approved5DateTime?: string;
  approved5Status?: ApprovalStatus;
  approvedStatusHrd?: ApprovalStatus;
  clockInRadius?: number;
  clockOutRadius?: string;
  isAbsence?: boolean;
  absenceReason?: string;
  isLate?: boolean;
  lateLong?: string;
  lateReason?: string;
  isHomeEarly?: boolean;
  homeEarlyReason?: string;
  isOutOffice?: boolean;
  outOfficeReason?: string;
  isLateNight?: boolean;
  lateNightReason?: string;
  isOvertime?: boolean;
  overtimeReason?: string;
  isAttend?: boolean;
  totalBreakTime1?: number;
  totalBreakTime2?: number;
  totalWorkingHours?: number;
  totalOvertime?: number;
  dateClosed?: string;
  companyId: string;
  employeeId: string;
  approved1ById?: string;
  approved2ById?: string;
  approved3ById?: string;
  approved4ById?: string;
  approved5ById?: string;
  workshiftId?: string;
}

export interface EmployeeWorkshiftWithNavigationPropertiesDto {
  employeeWorkshift: EmployeeWorkshiftDto;
  company: CompanyDto;
  employee: EmployeeDto;
  workshift: WorkshiftDto;
}

export interface GetEmployeeWorkshiftsInput extends PagedAndSortedResultRequestDto {
  filterText?: string;
  number?: string;
  dateMin?: string;
  dateMax?: string;
  dateClientLocalMin?: string;
  dateClientLocalMax?: string;
  timeZoneInfo?: string;
  timeZoneOffsetMin?: number;
  timeZoneOffsetMax?: number;
  wsWorkTimeInMin?: string;
  wsWorkTimeInMax?: string;
  wsClockInStartMin?: string;
  wsClockInStartMax?: string;
  wsClockInEndMin?: string;
  wsClockInEndMax?: string;
  wsClockInLatitude?: string;
  wsClockInLongitude?: string;
  wsClockInRadiusMin?: number;
  wsClockInRadiusMax?: number;
  wsWorkTimeOutMin?: string;
  wsWorkTimeOutMax?: string;
  wsClockOutStartMin?: string;
  wsClockOutStartMax?: string;
  wsClockOutEndMin?: string;
  wsClockOutEndMax?: string;
  wsClockOutLatitude?: string;
  wsClockOutLongitude?: string;
  wsClockOutRadiusMin?: number;
  wsClockOutRadiusMax?: number;
  wsBreakTimeStart1Min?: string;
  wsBreakTimeStart1Max?: string;
  wsBreakTimeEnd1Min?: string;
  wsBreakTimeEnd1Max?: string;
  wsBreakTimeStart2Min?: string;
  wsBreakTimeStart2Max?: string;
  wsBreakTimeEnd2Min?: string;
  wsBreakTimeEnd2Max?: string;
  wsOvertimeStartMin?: string;
  wsOvertimeStartMax?: string;
  wsOvertimeEndMin?: string;
  wsOvertimeEndMax?: string;
  wsTotalBreakTime1Min?: number;
  wsTotalBreakTime1Max?: number;
  wsTotalBreakTime2Min?: number;
  wsTotalBreakTime2Max?: number;
  wsTotalWorkingHoursMin?: number;
  wsTotalWorkingHoursMax?: number;
  wsTotalOvertimeMin?: number;
  wsTotalOvertimeMax?: number;
  wsIsWeekdays?: boolean;
  wsIsWeekend?: boolean;
  wsIsFriday?: boolean;
  wsIsSaturday?: boolean;
  wsIsSunday?: boolean;
  wsIsHoliday?: boolean;
  wsIsLeave?: boolean;
  wsLeaveNumber?: string;
  wsLeaveDetailId?: string;
  clockInMin?: string;
  clockInMax?: string;
  clockInTimeZoneInfo?: string;
  clockInTimeZoneOffsetMin?: number;
  clockInTimeZoneOffsetMax?: number;
  clockInPhoto?: string;
  clockInTemperatureMin?: number;
  clockInTemperatureMax?: number;
  clockInDeviceId?: string;
  clockInIsMobileDevice?: boolean;
  clockInIsThirdPartyDevice?: boolean;
  clockInLocation?: string;
  clockInLatitude?: string;
  clockInLongitude?: string;
  clockOutMin?: string;
  clockOutMax?: string;
  clockOutTimeZoneInfo?: string;
  clockOutTimeZoneOffsetMin?: number;
  clockOutTimeZoneOffsetMax?: number;
  clockOutPhoto?: string;
  clockOutTemperatureMin?: number;
  clockOutTemperatureMax?: number;
  clockOutDeviceId?: string;
  clockOutIsMobileDevice?: boolean;
  clockOutIsThirdPartyDevice?: boolean;
  clockOutLocation?: string;
  clockOutLatitude?: string;
  clockOutLongitude?: string;
  requestType?: RequestType;
  requestDateMin?: string;
  requestDateMax?: string;
  requestNumber?: string;
  requestReason?: string;
  requestIsReject?: boolean;
  requestRejectReason?: string;
  approved1DateTimeMin?: string;
  approved1DateTimeMax?: string;
  approved1Status?: ApprovalStatus;
  approved2DateTimeMin?: string;
  approved2DateTimeMax?: string;
  approved2Status?: ApprovalStatus;
  approved3DateTimeMin?: string;
  approved3DateTimeMax?: string;
  approved3Status?: ApprovalStatus;
  approvedStatus?: ApprovalStatus;
  approved4DateTimeMin?: string;
  approved4DateTimeMax?: string;
  approved4Status?: ApprovalStatus;
  approved5DateTimeMin?: string;
  approved5DateTimeMax?: string;
  approved5Status?: ApprovalStatus;
  approvedStatusHrd?: ApprovalStatus;
  clockInRadiusMin?: number;
  clockInRadiusMax?: number;
  clockOutRadius?: string;
  isAbsence?: boolean;
  absenceReason?: string;
  isLate?: boolean;
  lateLong?: string;
  lateReason?: string;
  isHomeEarly?: boolean;
  homeEarlyReason?: string;
  isOutOffice?: boolean;
  outOfficeReason?: string;
  isLateNight?: boolean;
  lateNightReason?: string;
  isOvertime?: boolean;
  overtimeReason?: string;
  isAttend?: boolean;
  totalBreakTime1Min?: number;
  totalBreakTime1Max?: number;
  totalBreakTime2Min?: number;
  totalBreakTime2Max?: number;
  totalWorkingHoursMin?: number;
  totalWorkingHoursMax?: number;
  totalOvertimeMin?: number;
  totalOvertimeMax?: number;
  dateClosedMin?: string;
  dateClosedMax?: string;
  companyId?: string;
  employeeId?: string;
  approved1ById?: string;
  approved2ById?: string;
  approved3ById?: string;
  approved4ById?: string;
  approved5ById?: string;
  workshiftId?: string;
}
