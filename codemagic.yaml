workflows:
  ios-workflow:
    name: iOS workflow
    environment:
      vars:
        XCODE_WORKSPACE: "platforms/ios/YOUR_APP.xcworkspace" # <- Update with your workspace name
        XCODE_SCHEME: "YOUR_SCHEME" # <- Update with your workspace scheme
        APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmd3WDJvN3JEajlKUnZ0NlFPUUV3aUR0enczbFhkQ0R6MTAyM01CSnppcFNtWDhiNUQ0eTJTdDRVVS13LUluR1N6RHhDMWh3c05yUWZ1dUwwZDZ4ZElEWGZ6ZmJDUnVYSXBWblRIbThmTmdBUVdPSXdoT2wxZ01HNGliTzBYbkg2MEJfWXI=)# <-- Put your App Store Connect Issuer Id here
        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(Z0FBQUFBQmd3WDNaRnoySkRXTHg0WFhLeUt3X3lScUFzSW1jeVh5WU94NjFhQ2pnZzc1aVlpSmlrVVVmc0ZBYzRRdWR4cVg3SndETTE4MWU5MXJKWndDcjFNTFdhbGx3QkE9PQ==) # <-- Put your App Store Connect Key Identifier here
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmd3WDRFOUpEQkdtN3MtOFV1Qjk3a0xRM2J0U0JxNFlVSmlSRmZPd2ZqUVFXOXVSeDJERnFnWmxrYkNER0lyMTdCNERMMFoxaHlEQkQwd3hVMkhPTXpHMHA3SnFmNWxsbUo1NlMtYmY3TVNHUUxIUnFXOVl1WXJsM3dCcmw2NGVyZDZiM2xhZjdLbURwc19BTVRIT2NRemJZaFJmR3RHY2ppSHlZOTVSOXVYZ1NQb0dkaGlrOV9HaGs1bkNFUk5jV2FUaFU1MW1WZGhlTk5jeExZSVNhNGNGTjFxLWtXUnZoZ19jN0k4b00tSzdtck1UMVEwQ0NNUTZBNkJoS2lBeVRjVWxaRFN1OVAwSXBtZHRObUxXdzhjWGw4ckhqeUduS3dtd3lWV1RNdjZXY0Zsb0RnbXlDZTZMTVV0NC1HcVA3a3dFS2RPUHBXeW1nSXBkOXRRUFI5TnNQel9XR2RVS2pSLWREd0JxdUhWYnlRSGZnTVY3V3EwUURXVFZaejRObmZRSjZYSlZuUFU2QVhkcXdTYkxxb3NneFRmbEZVQmVWWGNqZkVDb01HWGF6Q3puTT0=) # <-- Put your App Store Connect Private Key here
        CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmd3WDRnZU9Fd0hfeUtZZEVpVGJqcllTblRLU3VzVVh1NFBhZ2hianRjaGQ4Tm1hdGJZRTlfNHQzVDhVaXZaRGl4N3VBazkxazZ1Z244Y3c4ZWs3d0pPOEc4Ui05cUtvR3JqRnVvR0d4QTJQdzhiY3Y2LU1LZzNPRXA2bmppbnZrRnMtRy1MS0RiczZCQkxaUUh6S3diWHYwcms4YUxRZjNLX0FJMWwxU3kzZk55ZWo3Mk9XNzdTWXhvUkpwb0w2WFdyT1c0ek5EY2pkdHBubEtFX2c1OUZxUGdpWEc4WDNaVm9wMkNTU0ZuRmpVZnpBRk5jeGV2SUo2MDd0WElET2FrYkFqR1pkbXEyTHFlOXozTnh6Qi0xNnc4S3IwVF9KdWVfNllhSHlWZnVRZW9pQmFaTlN2Vkd1WUJ5Ynl1c21Cb2dXTmM3c3FuZUFyQ0F2WmtCS1dWWmxnZ0FTeTZsOGtDLUQtYlcxMVJvRkloRUY3TVRNQWxVcy1sbWtSM1dfb0NYMnNIZl9xMDlqLTU5WWhheUpxVm8tZVNSNXl5YWxwdGdIdnk0OFhkYWh2WE9mdC1ZMmpxNlpxRkV1Tnp2OVJISHYxM2gtYVI0Q1FvX2l2YVh5dVBTSWo3OFdhT0lZN1FzeHM2aXZzckgwbEJIdDdMZF9SV1ROaU96aTREN1VpUk9BNWdOTTFrUTdaM1RfWWdOR2J1eDR0VUhzajkydW5nVGJvTi1Ca3VocjlqUE5OaTJ5dm50c3ZiMW93RzJmTm01NG5USS03TWxDYUdUTG9YWVg4eHJValF0dDFqQy1Vby1TZEI0VGR6eEp5akR4bEt4TGFYc2xvUVg3dWNDX2JJSWVydURTNzAyQ1Z1NkprRG1YSm5zWjRSaEgwSmt3UWhJVlJOYkJ1TDhwU3R0elQyODhUT3JxXzI1MEo2a3NoOU42TGhJanV1YjVKbGdraWlFUkZFUGtLVW5Ya2hvNF9keXJDekpvU1RpakVxVFltVVVsaG85M0Vld0RLOVFHa1k2T1JWWVdkeUhINVRVSVFQVEpHN0kwckxXOUo4S2xfSTdlaFZFbnExVjZmMGNuRXRzY3VyOFhEdFlTNEQ5eU5oR0VYT3REdXZnQkQzVG84MUMxSmhlSmNna0Rva29ITWZZWHo0WDJsdUpleGR5S0QzWkg2X2NPenh1TmFMem1SVEE3VWdhSURlR3FzY1VCMnNjR1I1WGlxeHZCN2pQZElRMEoxTEw4VGtfMnRDSjh6ODZhd2ZDSUozbGUyQUxKTkdTalp3ckR6YU5fM3pJTzROTG15clBKdTlEcTBOYmkzLVBDZDdfU3FVekhodHhnZ0RMazJ4RXdEcEVZTlZFTWFuaS1oQXdWV24wQml3VHJmQ3ZCWktlcTk4emVURzRKWVE5YmNqUUw2OU05TjAtN0JrUzI4Tl92R0lmNTJrR01xN1VGWlZmX3RJWFZmZ2lSNjZrWWxwd0NOVi12TEd2d1EtUGxxd29nNHpiaUhYTW5WZEotcEI3cHpSLWZGbDd0Y0NWaGowYjUtUG5lLUFtQUlycW43UVEyR3hLLUpta1pNS0pLd29CWTd2bGtrdnRjUEVHYlpBZkprak5pc3FYVUdwbkljcjA2NmhpaWNVblp2aHZqVVN5OU9mN25VRHgxZFRSbnpEekNlWnhVT2owcVprc0VwRmkzOW1LcVhmNzIxNTgwaTE4QUN4LWgzZmdxdTE4YUNlS2VCNHVTY0I4M3hmcmNrc0loOHNPVHBCN0ZfZ194SFlLXzV5eFJ1QW5DMURSbTNoVmxRNlVCSGxzRGU3VzBjcVB1TVhWWFV6OWdodjlaWEd2b0Q4OXVKRUZna2RlUnQ5NjlXWndWTkNsVFlrSi14QjdERW4xdV9Vb2k0d3dmc0hLTENTek1hSkVILS1kNWF3andoYjM2ODFDWjJUTUdxb0dtUXctQXQ4R1JVU3pScHl5SHZManFHdmlVd3M5SXFOZWdoWEJjTlVmUlVfSHh1TWlpSENUUmVncFZNdDlmUFNYVTdzTDhtOG5IbUlqd0ZfVTBpaTFsUlJkeU5CY1YtVzhkRnpLVThkV0Zza3ZOVWsyWGU4dk5HRWljSXlzSjdpTjhBQ2c3dUdPQUxxRnQ5QVk5cHUzZFgyZEc2Tnk3VXJDc3REMVlvclVlNXl1V2lkWjlEZ0lDcUZ1NHB6SzJ3U0p2UXBYYnp6TGg2cmt4cEYxVWsxZTR3ZzROdk5ELV9SSVo0bUNhdHBZSWdUWjdPSHFVU1ZCNnBjbkxtWU9KOW5ULXhQX0ZSYktXaW1tbGljR0FuZmd2cXBZVjhWVldvZHR5SVlhTXh1SlVHdmpqcS1nX0VrSmxhQ1hPMHAzTDNKMWtVYS11bjJ0T2gxaDI1ZVFieGpjOUJFeVJGUUkwbVJFRGZyUWpVRG83TmJqRUo2dHEyMmVUTURFaTNqNS1OTGl6TWlLRlphcmRrSXpid1pRY0t3TFNYY1F0R2M2dExqazVfRGl0WnJyTk9Bd2ZiYXR1bGJ4aHVtRDRZa3pEQ2RZODZkMlJLN1RYVG92cHAycVFMeXRxcUVPSmRqMFhkdE9ZdkprYzFZam52ZVlzakdCSVNCa3JGUnhoM0JCTXRkTWU1TEhDdnJBUXh6cW9TcDFNcmpIUmZWLUNvQTdyTmZ4N19vdU85NmNTcGd3M0hJN3c4Q2NjR216eWVwZk9PdzRxckI4QkdrdWVqQlprdUdhcmtBaFhmbzdlV3VXNTZrak5HVkthVUI4QmNtZ2VmMVd4dHR1ZmI5OGRYNXhXUGtvMmE1UEJjNXllcXlxR3ViUm5BMkYyN3ZMU2ZZcGNDcFhSZFZXOWYyN25WaC1kdThPeWxmU0lGamlrSEVLbzY2ZVpOZGxXdVdKeDg0Tm9COFRoRGdrYzg5N1ViNFR2R1Y3bWxJRUh6NG95OEJ6LU95dlRQQ09Fd0puQl9hTE5nYl9EUXM2b0VqdlNydVdmZHBFY3NUMnlZYm9CMG1MYmJCRFA4VUhTNkVVdTRnOUsxQndHUFdqTHFHTUxUZ1BLY1VDOHR5a2FmSmEweFJZaEY3) # <-- Put your Certificate Private key here
        BUNDLE_ID: "com.idooh.saleskoo.pro" # <-- Put your Bundle Id here.
        CM_PROVISIONING_PROFILE: Encrypted() # <-- Put your encrypted provisioning profile here.              
      
      xcode: 12.1
      node: 14.15.0
      npm: 6
    cache:
      cache_paths:
        - $FCI_BUILD_DIR/node_modules
    scripts:
      - name: Install dependencies
        script: |
          npm ci --quiet --no-optional
          npm install --quiet --no-optional
          security list-keychains -d user
          npm run build
          npm ci
          cvm install 10.0.0
          cvm use 10.0.0
          npm install -g ionic
          ionic info   
      - name: Devlopy
        script: |
          
          ionic deploy manifest
      - name: Setup iOS
        script: |
          
          ionic cordova platform add ios 
                  
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build iOS
        script: |
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
          echo "Saved provisioning profile $PROFILE_PATH"
          package_type=$(defaults read ~/export_options.plist method)
          identity=$(defaults read ~/export_options.plist signingCertificate)
          team=$(defaults read ~/export_options.plist teamID)
          profile=$(find '/Users/builder/Library/MobileDevice/Provisioning Profiles' -name "*.mobileprovision")
          profile_uuid=$(grep UUID -A1 -a "$profile" | grep -io "[-A-F0-9]\{36\}")
        
          cat <<EOF > build.json
              {
                "ios": {
                  "release": {
                    "codeSignIdentity": "$identity",
                    "developmentTeam": "$team",
                    "packageType": "$package_type",
                    "provisioningProfile": "$profile_uuid"
                  }
                }
              }
          EOF
          ionic cordova build ios --release
    artifacts:
      - /Users/builder/clone/platforms/ios/build/device/*.app
      - /tmp/xcodebuild_logs/*.log           
   
      
    